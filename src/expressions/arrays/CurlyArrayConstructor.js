"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Expression_1 = require("../Expression");
const Specificity_1 = require("../Specificity");
const ArrayValue_1 = require("../dataTypes/ArrayValue");
const SequenceFactory_1 = require("../dataTypes/SequenceFactory");
const createDoublyIterableSequence_1 = require("../util/createDoublyIterableSequence");
class CurlyArrayConstructor extends Expression_1.default {
    constructor(members) {
        super(new Specificity_1.default({
            [Specificity_1.default.EXTERNAL_KIND]: 1
        }), members, {
            canBeStaticallyEvaluated: members.every(member => member.canBeStaticallyEvaluated)
        });
        this._members = members;
    }
    evaluate(dynamicContext, executionParameters) {
        if (this._members.length === 0) {
            return SequenceFactory_1.default.singleton(new ArrayValue_1.default([]));
        }
        return this._members[0].evaluateMaybeStatically(dynamicContext, executionParameters)
            .mapAll(allValues => SequenceFactory_1.default.singleton(new ArrayValue_1.default(allValues.map(item => createDoublyIterableSequence_1.default(SequenceFactory_1.default.singleton(item))))));
    }
}
exports.default = CurlyArrayConstructor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VybHlBcnJheUNvbnN0cnVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQ3VybHlBcnJheUNvbnN0cnVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsOENBQXVDO0FBQ3ZDLGdEQUF5QztBQUN6Qyx3REFBaUQ7QUFDakQsa0VBQTJEO0FBQzNELHVGQUFnRjtBQUVoRixNQUFNLHFCQUFzQixTQUFRLG9CQUFVO0lBRTdDLFlBQVksT0FBMEI7UUFDckMsS0FBSyxDQUNKLElBQUkscUJBQVcsQ0FBQztZQUNoQixDQUFDLHFCQUFXLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztTQUM3QixDQUFDLEVBQ0YsT0FBTyxFQUNQO1lBQ0Msd0JBQXdCLEVBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQztTQUNsRixDQUFDLENBQUM7UUFFSixJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0lBRUQsUUFBUSxDQUFFLGNBQWMsRUFBRSxtQkFBbUI7UUFDNUMsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDL0IsT0FBTyx5QkFBZSxDQUFDLFNBQVMsQ0FBQyxJQUFJLG9CQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUNyRDtRQUNELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQyxjQUFjLEVBQUUsbUJBQW1CLENBQUM7YUFDbEYsTUFBTSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMseUJBQWUsQ0FBQyxTQUFTLENBQzdDLElBQUksb0JBQVUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsc0NBQTRCLENBQUMseUJBQWUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFHLENBQUM7Q0FDRDtBQUNELGtCQUFlLHFCQUFxQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4cHJlc3Npb24gZnJvbSAnLi4vRXhwcmVzc2lvbic7XG5pbXBvcnQgU3BlY2lmaWNpdHkgZnJvbSAnLi4vU3BlY2lmaWNpdHknO1xuaW1wb3J0IEFycmF5VmFsdWUgZnJvbSAnLi4vZGF0YVR5cGVzL0FycmF5VmFsdWUnO1xuaW1wb3J0IFNlcXVlbmNlRmFjdG9yeSBmcm9tICcuLi9kYXRhVHlwZXMvU2VxdWVuY2VGYWN0b3J5JztcbmltcG9ydCBjcmVhdGVEb3VibHlJdGVyYWJsZVNlcXVlbmNlIGZyb20gJy4uL3V0aWwvY3JlYXRlRG91Ymx5SXRlcmFibGVTZXF1ZW5jZSc7XG5cbmNsYXNzIEN1cmx5QXJyYXlDb25zdHJ1Y3RvciBleHRlbmRzIEV4cHJlc3Npb24ge1xuXHRfbWVtYmVyczogRXhwcmVzc2lvbltdO1xuXHRjb25zdHJ1Y3RvcihtZW1iZXJzOiBBcnJheTxFeHByZXNzaW9uPikge1xuXHRcdHN1cGVyKFxuXHRcdFx0bmV3IFNwZWNpZmljaXR5KHtcblx0XHRcdFtTcGVjaWZpY2l0eS5FWFRFUk5BTF9LSU5EXTogMVxuXHRcdFx0fSksXG5cdFx0XHRtZW1iZXJzLFxuXHRcdFx0e1xuXHRcdFx0XHRjYW5CZVN0YXRpY2FsbHlFdmFsdWF0ZWQ6IG1lbWJlcnMuZXZlcnkobWVtYmVyID0+IG1lbWJlci5jYW5CZVN0YXRpY2FsbHlFdmFsdWF0ZWQpXG5cdFx0XHR9KTtcblxuXHRcdHRoaXMuX21lbWJlcnMgPSBtZW1iZXJzO1xuXHR9XG5cblx0ZXZhbHVhdGUgKGR5bmFtaWNDb250ZXh0LCBleGVjdXRpb25QYXJhbWV0ZXJzKSB7XG5cdFx0aWYgKHRoaXMuX21lbWJlcnMubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRyZXR1cm4gU2VxdWVuY2VGYWN0b3J5LnNpbmdsZXRvbihuZXcgQXJyYXlWYWx1ZShbXSkpO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5fbWVtYmVyc1swXS5ldmFsdWF0ZU1heWJlU3RhdGljYWxseShkeW5hbWljQ29udGV4dCwgZXhlY3V0aW9uUGFyYW1ldGVycylcblx0XHRcdC5tYXBBbGwoYWxsVmFsdWVzID0+IFNlcXVlbmNlRmFjdG9yeS5zaW5nbGV0b24oXG5cdFx0XHRcdG5ldyBBcnJheVZhbHVlKGFsbFZhbHVlcy5tYXAoaXRlbSA9PiBjcmVhdGVEb3VibHlJdGVyYWJsZVNlcXVlbmNlKFNlcXVlbmNlRmFjdG9yeS5zaW5nbGV0b24oaXRlbSkpKSkpKTtcblx0fVxufVxuZXhwb3J0IGRlZmF1bHQgQ3VybHlBcnJheUNvbnN0cnVjdG9yO1xuIl19